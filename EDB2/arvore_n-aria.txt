       struct arvvar{
         char info;
         struct arvvar *primeiro;
         struct arvvar *proximo;
       };
       
       typedef struct arvvar ArvVar;
       
       ----------------------------
       
       ArvVar *arvv_cria(char c)
       {
         ArvVar *a = (ArvVar *) malloc(sizeof(ArvVar));
         a->info = c;
         a->primeiro = NULL;
         a->proximo = NULL;
         return a;
       }
       
       ----------------------------
       
       void arvv_insere(ArvVar *a, ArvVar *sa)
       {
         sa->proximo = a->primeiro;
         a->primeiro = sa;
       }
       
       ----------------------------
       
             
       void arvv_imprime(ArvVar *a)
       {
         ArvVar *p;
         
         printf("<%c\n", a->info);
         for(p=a->primeiro; p!=NULL; p=p->proximo)
           arvv_imprime(p);  // Imprime cada subárvore filha.
         printf(">");
       }
       
      ----------------------------
      
      int arvv_pertence(ArvVar *a, char c)
      {
        ArvVar *p;
        
        if(a->info == c)
          return 1;
        else{
          for(p=a->primeiro; p!=NULL; p=p->proximo){
            if(arvv_pertence(p,c))
              return 1;
          }
          return 0;
        }
      }
      
      ----------------------------
      
      void arvv_libera(ArvVar *a)
      {
        ArvVar *p = a->primeiro;
        while(p != NULL){
          ArvVar *t = p->proximo;
          arvv_libera(p);
          p = t;
        }
        free(a);
      }
      
      ----------------------------
   
       // Cria nós como folhas
       ArvVar *a = arvv_cria('a');
       ArvVar *b = arvv_cria('b');
       ArvVar *c = arvv_cria('c');
       ArvVar *d = arvv_cria('d');
       ArvVar *e = arvv_cria('e');
       ArvVar *f = arvv_cria('f');
       ArvVar *g = arvv_cria('g');
       ArvVar *h = arvv_cria('h');
       ArvVar *i = arvv_cria('i');
       ArvVar *j = arvv_cria('j');
       
       // Monta a hierarquia
       arvv_insere(c,d);
       arvv_insere(b,e);
       arvv_insere(b,c);
       arvv_insere(i,j);
       arvv_insere(g,i);
       arvv_insere(g,h);
       arvv_insere(a,g);
       arvv_insere(a,f);
       arvv_insere(a,b);
 
